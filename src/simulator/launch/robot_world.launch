<launch>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" default="test"/>


   <arg name="obstacle_num" default="4"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="$(arg verbose)"/>
    <arg name="world_name" value="$(find simulator)/world/$(arg world_name).world"/>
  </include>


  <arg name="cmd_vel_robot" default="cmd_vel_robot"/>
    <param name="robot_description" command="$(find xacro)/xacro $(find robot_simulator)/urdf/car.urdf.xacro  cmd_vel_top:=$(arg cmd_vel_robot) " />
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model robot -param robot_description -x 8 -y 8 -z 0.5"  />



  <arg name="cmd_vel_ob1" default="/cmd_vel_ob1"/>
     <param name="actor1" command="$(find xacro)/xacro $(find robot_simulator)/urdf/car.urdf.xacro  cmd_vel_top:=$(arg cmd_vel_ob1) " />
    <node pkg="gazebo_ros" type="spawn_model" name="actor1" args="-urdf -model actor1 -param actor1 -x -5 -y 5 -z 0.5 "  />
     <node name="cmd_vel_ob1" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" launch-prefix="gnome-terminal --title=cmd_vel_ob1 -x">
      <remap from="/cmd_vel" to="$(arg cmd_vel_ob1)" />        
    </node>

  <arg name="cmd_vel_ob2" default="/cmd_vel_ob2"/>
     <param name="actor2" command="$(find xacro)/xacro $(find robot_simulator)/urdf/car.urdf.xacro  cmd_vel_top:=$(arg cmd_vel_ob2) " />
    <node pkg="gazebo_ros" type="spawn_model" name="actor2" args="-urdf -model actor2 -param actor2 -x -3 -y 0 -z 0.5 "  />



    <arg name="cmd_vel_ob3" default="/cmd_vel_ob3"/>
     <param name="actor3" command="$(find xacro)/xacro $(find robot_simulator)/urdf/car.urdf.xacro  cmd_vel_top:=$(arg cmd_vel_ob3) " />
    <node pkg="gazebo_ros" type="spawn_model" name="actor3" args="-urdf -model actor3 -param actor3 -x 5 -y -5 -z 0.5 -Y 3.1415927"  />



    <arg name="cmd_vel_ob4" default="/cmd_vel_ob4"/>
     <param name="actor4" command="$(find xacro)/xacro $(find robot_simulator)/urdf/car.urdf.xacro  cmd_vel_top:=$(arg cmd_vel_ob4) " />
    <node pkg="gazebo_ros" type="spawn_model" name="actor4" args="-urdf -model actor4 -param actor4 -x 2 -y -4 -z 0.5 -Y 1.5707963"  />


  


    
    <rosparam file="$(find robot_simulator)/config/control.yaml" command="load"/>
            <!-- <rosparam command="load" file="$(find scout_control)/config/scout2_control.yaml"/>
             -->
    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" 
    args="scout_state_controller l_controller r_controller"/>
  

    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />



   

    <include file="$(find actor2odom)/launch/actor2odom.launch" >
    <arg name="obstacle_num" value="$(arg obstacle_num)"/>

  </include>


</launch>
